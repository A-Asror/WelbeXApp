version: '3.9'

networks:
  fastapi-network:
    driver: bridge
    name: fastapi-network

services:

  backend:
    container_name: ${PROJECT_NAME}
    restart: unless-stopped
    build:
      context: ./
      dockerfile: .docker/dev/backend/Dockerfile
    env_file:
      - .env
    volumes:
      - ./:/home/app/backend
    ports:
      - ${BACKEND_SERVER_PORT:-8000}:8000
    depends_on:
      - postgresql
    networks:
      - fastapi-network

  celery-worker:
    container_name: ${PROJECT_NAME}-celery-worker
    hostname: ${PROJECT_NAME}-celery-worker
    build:
      context: ./
      dockerfile: .docker/dev/celery_worker/Dockerfile
    env_file:
      - .env
    volumes:
      - ./:/home/app/backend
    security_opt:
      - seccomp:unconfined
    tty: true
    restart: unless-stopped
    networks:
      - fastapi-network
    depends_on:
      - redis
      - postgresql

  celery-beat:
    container_name: ${PROJECT_NAME}-celery-beat
    hostname: ${PROJECT_NAME}-celery-beat
    build:
      context: ./
      dockerfile: .docker/dev/celery_beat/Dockerfile
    env_file:
      - .env
    volumes:
      - ./:/home/app/backend
    security_opt:
      - seccomp:unconfined
    tty: true
    restart: unless-stopped
    networks:
      - fastapi-network
    depends_on:
      - redis
      - celery-worker

  postgresql:
    container_name: ${PROJECT_NAME}-postgresql
    hostname: ${PROJECT_NAME}-postgresql
    restart: always
    build:
      context: ./
      dockerfile: .docker/dev/postgresql/Dockerfile
    env_file:
      - .docker/dev/postgresql/config.ini
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_NAME}
      - POSTGRES_HOST=${POSTGRES_HOST}
      - POSTGRES_PORT=${POSTGRES_PORT}
    volumes:
      - postgresql_data:/var/lib/postgresql/data/
    ports:
      - ${POSTGRES_PORT}:5432
    networks:
      - fastapi-network
    tty: true

  redis:
    container_name: ${PROJECT_NAME}-redis
    hostname: ${PROJECT_NAME}-redis
    image: redis:alpine
    env_file:
      - .docker/dev/redis/config.ini
    ports:
      - ${REDIS_PORT:-6379}:6379
    volumes:
      - redis:/data
      - .docker/dev/redis/sysctl.conf:/etc/sysctl.conf
    tty: true
    restart: unless-stopped
    networks:
      - fastapi-network

volumes:
  redis:
    driver: local
  postgresql_data:
    driver: local
  postgresql_editor_data:
    driver: local
